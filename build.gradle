plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin'      version '0.0.8'
    id 'org.beryx.jlink'               version '2.15.1'
}
apply plugin: 'org.javamodularity.moduleplugin'

// Application Configuration
ext {
    appName = "fxapp"
    appLauncher = "fxapp"
    appPackaging = "pers.ignatius.bilibili.javafx"
    appModuleName = "fxmodule"
    appMainClass = "pers.ignatius.bilibili.javafx.Main"
}

mainClassName = "${ext.appModuleName}/${ext.appMainClass}"

repositories {
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
}

javafx {
    version = '14'
    modules = [
            'javafx.base',
            'javafx.graphics',
            'javafx.controls',
            'javafx.fxml',
            'javafx.media',
            'javafx.swing',
            'javafx.web'
    ]
}


application {
    mainModule = 'fxmodule' // name defined in module-info.java
    mainClass = 'pers.ignatius.bilibili.javafx.Main'
}

jlink {
    imageZip = project.file("${buildDir}/distributions/${appPackaging}-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = "${appLauncher}"
    }
}

task dist {
    dependsOn clean, jlinkZip
    description "Calls clean and then jlinkZip [default]"
}

defaultTasks 'dist'

if (project.hasProperty('debugRun') && project.debugRun as boolean) {
    run {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=*:5005'
    }
}

plugins.withType(JavaPlugin).configureEach {
    java {
        modularity.inferModulePath = true
    }
}

sourceSets {
    main {
        output.setResourcesDir(java.outputDir)
    }
}